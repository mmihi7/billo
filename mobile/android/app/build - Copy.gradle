plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
}

def versions = rootProject.ext.versions

def firebaseConfigFile = file("google-services.json")
if (!firebaseConfigFile.exists()) {
    logger.warn('WARNING: google-services.json is missing. Firebase services will not work.')
}

android {
    namespace "com.billo.app"
    
    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
    
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }
    
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 
                       'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 
                       'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }

    // Configure Kapt tasks for Java 17 compatibility
    tasks.withType(org.jetbrains.kotlin.gradle.internal.KaptTask.class).configureEach {
        if (JavaVersion.current().isJava9Compatible()) {
            kotlinOptions {
                jvmTarget = versions.jvm
                freeCompilerArgs += [
                    '--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
                    '--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
                    '--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED'
                ]
            }
        }
    }
    
    defaultConfig {
        applicationId "com.billo.app"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        
        aaptOptions {
            // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
        
        // Enable multidex support
    }
    
    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
    
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }
    
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }

    androidResources {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }


} // End of android block

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    // Core AndroidX
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:${versions.desugarJdkLibs}"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    // Core AndroidX
    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.activity:activity-ktx:${versions.activity}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragment}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"
    implementation "androidx.coordinatorlayout:coordinatorlayout:${versions.coordinatorLayout}"
    implementation "androidx.core:core-splashscreen:${versions.splashscreen}"
    
    // UI Components
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    implementation "androidx.cardview:cardview:${versions.cardview}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swiperefresh}"
    implementation "androidx.viewpager2:viewpager2:${versions.viewpager2}"
    
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigation}"
    implementation "androidx.hilt:hilt-navigation-fragment:1.1.0"
    
    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    
    // Dependency Injection
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt}"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:${versions.coroutines}"
    
    // Firebase
    implementation platform("com.google.firebase:firebase-bom:${versions.firebaseBom}")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    
    // QR Code
    implementation "com.journeyapps:zxing-android-embedded:${versions.zxing}"
    implementation "com.google.zxing:core:${versions.zxingCore}"
    
    // Image Loading
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"
    
    // Testing
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.extJunit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    
}

apply from: 'capacitor.build.gradle'
